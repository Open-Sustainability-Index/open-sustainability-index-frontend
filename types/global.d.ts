declare module 'postgraphile-plugin-nested-mutations'
declare module 'react-toastify'

declare global {
  interface Window {
    gtag: (event: string, action: string, options: any) => void
  }
}

interface NameAndId {
  id: number
  name: string | null
}

export interface PageProps {
  title: string // Meta title
  titleH1?: string // Optional H1 title, if different from meta title
  description: string // Meta description
  imageUrl?: string
  iconUrl?: string
  canonicalPath?: string
  redirectTo?: string // Will use meta httpEquiv='refresh' to redirect to another path
  showFooter?: boolean
}

export interface ListEndpointParams {
  page?: number
  pageSize?: number
  sort?: string
  order?: string
  filters?: Record<string, string | undefined>
}

export interface ListPageOptions {
  sort?: string
  order?: string
  detailPageLink?: string // for links in DataTable
}

export interface Industry {
  name: string
  slug?: string
}

export interface CompaniesCompany {
  company_name: string
  slug: string
  commitment_type: null | string
  status: 'Active' | 'Target set' | 'Removed' | 'Extended' | null
  commitment_deadline: null | string
  total_reported_emission_scope_1_2_3: number
  revenue: number | null
  hq_country_move: string
  year: number
  industry: string
  currency: 'USD' | 'SEK' | 'EUR' | null
  emission_intensity: number | null
  target_type: 'Absolute' | 'Net-zero' | 'Intensity' | null
  target_scope: null | string
  target_year: number | null
  targets: CompaniesCompanyTarget[]
}

export interface CompaniesCompanyTarget {
  target_type: string
  target_scope: string
  target_year: number
  target: string
}

export interface Company {
  company_name: string
  slug: string
  slug_old?: string
  slug_new?: string
  industry: null
  isic: null
  lei: null
  company_url: null
  source_reports_page: null
  autogenerated_contact: null
  sustainability_contact_name: null
  sustainability_contact_email: null
  sustainability_contact_linkedin: null
  sbt_status: null
  sbt_near_term_year: null
  sbt_near_term_target: null
  net_zero_year: null
  emissions: Emission[]
  targets: Target[]
  commitment: Commitment
}

export interface CompanyResponse {
  data: Company
  error: null
}

export interface Commitment {
  lei: string
  type: string
  scope: string
  action: string
  status: string
  target: string
  'sub-type': string
  base_year: string
  year_type: string
  target_year: string
  company_name: string
  target_value: string
  date_published: Date
  target_wording: string
  commitment_type: string
  commitment_deadline: string
  full_target_language: string
  target_classification: string
  company_temperature_alignment: string
  reason_for_commitment_extension_or_removal: string
}

/** emission table in backend */
export interface EmissionInsert {
  company_slug: string
  year: number
  fiscal_year?: string | null
  scope_1: number | null
  scope_2_market_based: number | null
  scope_2_location_based: number | null
  scope_2_unknown: number | null
  total_scope_3: number | null
  cat_1: number | null
  cat_2: number | null
  cat_3: number | null
  cat_4: number | null
  cat_5: number | null
  cat_6: number | null
  cat_7: number | null
  cat_8: number | null
  cat_9: number | null
  cat_10: number | null
  cat_11: number | null
  cat_12: number | null
  cat_13: number | null
  cat_14: number | null
  cat_15: number | null

  ghg_standard?: string | null

  all_cats?: string | null
  revenue_local?: number | null // In millions, in local currency
  currency?: string // 3-character code, defaults to 'USD'

  source_emission_report?: string | null
  emission_page?: string | null
  source_emission_link?: string | null
  source_emissions_page_move?: string | null
  source_revenue?: string | null
  page_revenue?: string | null
  source_revenue_link?: string | null

  publication_date?: string | null // Using ISO string format for date
  created_at?: string // ISO timestamp
  updated_at?: string // ISO timestamp
  status?: string | null
}

/** view_emission in backend */
export interface ViewEmission extends EmissionInsert {
  cradle_to_gate: number | null
  emission_intensity: number | null
  revenue: number | null
  scope_1_share_of_total_upstream_emissions: number | null
  share_upstream_of_scope_3: number | null
  total_emission_location_based: number | null
  total_emission_market_based: number | null
  total_reported_emission_scope_1_2: number | null
  total_reported_emission_scope_1_2_3: number | null
  total_upstream_emissions: number | null
  upstream_scope_3: number | null
}

// TODO: annoying workaround to get uploadAnalysis to build
export type EmissionAiInsert = Omit<EmissionInsert, 'company_slug' | 'created_at' | 'updated_at'> & {
  revenue: number
}

export interface Target {
  lei: string
  type: string
  scope: string
  action: string
  status: string
  target: string
  'sub-type': string
  base_year: number
  year_type: string
  target_year: number
  company_name: string
  target_value: string
  date_published: Date
  target_wording: string
  commitment_type: string
  commitment_deadline: string
  full_target_language: string
  target_classification: string
  company_temperature_alignment: string
  reason_for_commitment_extension_or_removal: string
}

export interface SearchResult {
  name: string
  slug: string
  type: string
}
